{"version":3,"sources":["base.sass","../libs/include-media/dist/_include-media.scss","utils/_variables.sass","base.css"],"names":[],"mappings":"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","file":"base.css","sourcesContent":["@import \"../libs/include-media/dist/include-media\";\n@import \"utils/variables\";\n@import \"utils/functions\";\n@import \"utils/mixins\";\n@import \"utils/placeholders\";\n\n.spec-panel {\n\tdisplay: none;\n\tposition: fixed;\n\tleft: 0;\n\ttop: 0;\n\theight: 100%;\n\twidth: 70px;\n\tz-index: 999;\n\tfont-size: 16px;\n\tline-height: 1;\n\toverflow: hidden;\n\tbox-shadow: 0 0 0 1px currentColor;\n\t//background-color: var(--main-bg-color);\n\tbackground-color: inherit;\n\twill-change: transform;\n\t-webkit-transform: translate(0, 0);\n\t-ms-transform: translate(0, 0);\n\ttransform: translate(0, 0);\n\t-webkit-transition: transform 0.3s linear;\n\ttransition: transform 0.3s linear;\n\n\t@include media('<mob-md') {\n\t\theight: 70px;\n\t\twidth: 100%;\n\t\tborder-width: 0 0 2px 0;\n\t\t$sh1: 0 0 0 2px;\n\t\t$sh2: 0 4px 4px;\n\t\tbox-shadow: $sh1 currentColor, $sh2 rgba($spec-text-color, 0.3);\n\n\t\t.schemecolor-white & {\n\t\t\tbox-shadow: $sh1 currentColor, $sh2 rgba($spec-text-color--scheme-white, 0.3); }\n\n\t\t.schemecolor-blue & {\n\t\t\tbox-shadow: $sh1 currentColor, $sh2 rgba($spec-text-color--scheme-blue, 0.3); } }\n\n\t.vspec & {\n\t\tdisplay: block; }\n\n\t&:hover,\n\t.mobile-device & {\n\t\toverflow-y: auto;\n\n\t\t@include media('<mob-md') {\n\t\t\toverflow-y: hidden;\n\t\t\toverflow-x: auto; } }\n\n\t.nav-opened .inner-page & {\n\t\t@include media('<tab-lg') {\n\t\t\ttransform: translate(-100%, 0); }\n\n\t\t@include media('<mob-md') {\n\t\t\ttransform: translate(0, calc(-100% - 2px));\n\t\t\tbox-shadow: none; } }\n\n\t.nav-opened .main-page & {\n\t\t@include media('<tab-sm') {\n\t\t\ttransform: translate(-100%, 0); } }\n\n\t.sv-btn-group {\n\t\t@include media('<mob-md') {\n\t\t\tdisplay: inline-block;\n\t\t\tvertical-align: top; }\n\n\t\t//a:last-child\n\t\t//argin-bottom: 0\n\n\t\t//include media('<mob-md')\n }\t\t//margin-right: 0\n\n\thr {\n\t\tborder-color: currentColor;\n\t\tborder-bottom-width: 1px;\n\t\tmargin: 20px 0;\n\n\t\t@include media('<mob-md') {\n\t\t\tdisplay: inline-block;\n\t\t\tvertical-align: top;\n\t\t\tborder-left: 1px solid currentColor;\n\t\t\tborder: none;\n\t\t\twidth: 0;\n\t\t\theight: 36px;\n\t\t\tmargin: 0 10px 0 0; } }\n\n\ta {\n\t\tdisplay: block;\n\t\tmargin-bottom: 18px;\n\t\tmargin-left: auto;\n\t\tmargin-right: auto;\n\n\t\t@include media('<mob-md') {\n\t\t\tdisplay: inline-block;\n\t\t\tvertical-align: top;\n\t\t\tmargin-bottom: 0;\n\t\t\tmargin-right: 10px; } } }\n\n.spec-panel_h {\n\tpadding: 20px 0;\n\ttext-align: center;\n\tletter-spacing: -4px;\n\tfont-size: 0;\n\tline-height: 1;\n\n\t@include media('<mob-md') {\n\t\twhite-space: nowrap;\n\t\tpadding: 10px; } }\n\n.spec-panel,\n.spec-panel_h {\n\twidth: 70px;\n\tbox-sizing: border-box;\n\n\t@include media('<mob-md') {\n\t\theight: 56px;\n\t\twidth: 100%; } }\n\n.vspec-btn,\n.spec-panel .sv-btn,\n.spec-panel .vnorm-btn {\n\t$size: 42px;\n\twidth: $size;\n\theight: $size;\n\tposition: relative;\n\toverflow: hidden;\n\tfont-size: 16px;\n\tline-height: 1;\n\tletter-spacing: normal;\n\ttext-decoration: none;\n\tborder-radius: 2px;\n\tborder: 1px solid $spec-text-color;\n\tbox-sizing: border-box;\n\n\t@include media('<mob-md') {\n\t\t$size: 36px;\n\t\twidth: $size;\n\t\theight: $size; }\n\n\t.schemecolor-white & {\n\t\tborder-color: $spec-text-color--scheme-white; }\n\n\t.schemecolor-blue & {\n\t\tborder-color: $spec-text-color--scheme-blue; } }\n\n.vspec-btn:hover,\n.spec-panel .sv-btn:not(.active):hover,\n.spec-panel .vnorm-btn:hover {\n\t-webkit-transform: translate(-1px, -1px);\n\t-ms-transform: translate(-1px, -1px);\n\ttransform: translate(-1px, -1px); }\n\n.vspec-btn:focus,\n.spec-panel .sv-btn:not(.active):focus,\n.spec-panel .vnorm-btn:focus {\n\t-webkit-transform: translate(-1px, -1px);\n\t-ms-transform: translate(-1px, -1px);\n\ttransform: translate(-1px, -1px); }\n\n.vspec-btn:active,\n.spec-panel .vnorm-btn:active,\n.spec-panel .sv-btn:active,\n.spec-panel .vspec .vnorm-btn:active {\n\t-webkit-transform: translate(0, 0);\n\t-ms-transform: translate(0, 0);\n\ttransform: translate(0, 0); }\n\n.vspec-btn.active,\n.spec-panel .vnorm-btn.active,\n.spec-panel .sv-btn.active,\n.spec-panel .vspec .vnorm-btn.active {\n\t$w1: 0 0 0 2px;\n\t$w2: 0 0 0 6px;\n\t$w1--sm: 0 0 0 2px;\n\t$w2--sm: 0 0 0 4px;\n\tbox-shadow: $w1 $spec-bg-color, $w2 $spec-text-color;\n\n\t@include media('<mob-md') {\n\t\tbox-shadow: $w1--sm $spec-bg-color, $w2--sm $spec-text-color; }\n\n\t.schemecolor-white & {\n\t\tbox-shadow: $w1 $spec-bg-color--scheme-white, $w2 $spec-text-color--scheme-white;\n\n\t\t@include media('<mob-md') {\n\t\t\tbox-shadow: $w1--sm $spec-bg-color--scheme-white, $w2--sm $spec-text-color--scheme-white; } }\n\n\t.schemecolor-blue & {\n\t\tbox-shadow: $w1 $spec-bg-color--scheme-blue, $w2 $spec-text-color--scheme-blue;\n\n\t\t@include media('<mob-md') {\n\t\t\tbox-shadow: $w1--sm $spec-bg-color--scheme-blue, $w2--sm $spec-text-color--scheme-blue; } } }\n\n.vspec-btn span,\n.spec-panel .sv-btn span,\n.spec-panel .vnorm-btn span {\n\tfont-size: 0;\n\tline-height: 0; }\n\n.vspec-btn svg,\n.spec-panel .sv-btn svg,\n.spec-panel .vnorm-btn svg {\n\tdisplay: block;\n\tposition: absolute;\n\tleft: 50%;\n\ttop: 50%;\n\ttransform: translate(-50%, -50%);\n\tbox-sizing: border-box; }\n\n.vspec-btn path,\n.spec-panel .sv-btn path,\n.spec-panel .vnorm-btn path {\n\tfill: currentColor; }\n\n.spec-panel .vnorm-btn {\n\tdisplay: none; }\n\n.vspec .spec-panel .vnorm-btn {\n\tdisplay: block;\n\n\t@include media('<mob-md') {\n\t\tdisplay: inline-block; } }\n\n.vspec-btn {\n\tposition: fixed;\n\tleft: 10px;\n\ttop: 10px;\n\tz-index: 9998;\n\tbackground-color: wheat;\n\tborder: none;\n\tbox-shadow: 2px 2px 2px rgba(black, 0.2); }\n\n.vspec .vspec-btn {\n\tdisplay: none; }\n\n/* vsize-btn */\n.spec-panel .vsize.active {\n\tcursor: default; }\n\n/* special version color */\n.spec-panel .vcolor-btn-black {\n\tcolor: $spec-text-color;\n\tbackground-color: $spec-bg-color; }\n\n.spec-panel .vcolor-btn-white {\n\tcolor: $spec-text-color--scheme-white;\n\tbackground-color: $spec-bg-color--scheme-white; }\n\n.spec-panel .vcolor-btn-blue {\n\tcolor: $spec-text-color--scheme-blue;\n\tbackground-color: $spec-bg-color--scheme-blue; }\n\n// letter spacing\n$icon-spacing--size: 16px 2px; // h w\n$icon-spacing--space: 3px; // h\n.sv-spacing-btn--small, .sv-spacing-btn--medium, .sv-spacing-btn--large {\n\t.spec-panel & {\n\t\t.icon {\n\t\t\t&, &::before, &::after {\n\t\t\t\tdisplay: block;\n\t\t\t\tposition: absolute;\n\t\t\t\tleft: 50%;\n\t\t\t\ttop: 50%;\n\t\t\t\theight: nth($icon-spacing--size, 1);\n\t\t\t\twidth: nth($icon-spacing--size, 2);\n\t\t\t\tbackground-color: currentColor; }\n\n\t\t\t& {\n\t\t\t\tmargin: -#{round(nth($icon-spacing--size, 1)/2)} 0 0 -#{round(nth($icon-spacing--size, 2)/2)}; }\n\n\t\t\t&::before, &::after {\n\t\t\t\tcontent: \"\";\n\t\t\t\tmargin-top: -#{round(nth($icon-spacing--size, 1)/2)}; }\n\n\t\t\t&::before {\n\t\t\t\tmargin-left: -#{$icon-spacing--space + round(nth($icon-spacing--size, 2)*1.5)}; }\n\n\t\t\t&::after {\n\t\t\t\tmargin-left: #{$icon-spacing--space + round(nth($icon-spacing--size, 2)*0.5)}; } } } }\n\n.sv-spacing-btn--medium {\n\t.spec-panel & {\n\t\t.icon {\n\t\t\t$icon-spacing--space: 6px; // h\n\n\t\t\t&::before {\n\t\t\t\tmargin-left: -#{$icon-spacing--space + round(nth($icon-spacing--size, 2)*1.5)}; }\n\n\t\t\t&::after {\n\t\t\t\tmargin-left: #{$icon-spacing--space + round(nth($icon-spacing--size, 2)*0.5)}; } } } }\n\n.sv-spacing-btn--large {\n\t.spec-panel & {\n\t\t.icon {\n\t\t\t$icon-spacing--space: 9px; // h\n\n\t\t\t&::before {\n\t\t\t\tmargin-left: -#{$icon-spacing--space + round(nth($icon-spacing--size, 2)*1.5)}; }\n\n\t\t\t&::after {\n\t\t\t\tmargin-left: #{$icon-spacing--space + round(nth($icon-spacing--size, 2)*0.5)}; } } } }\n\n// добавить в all.css\n.main-contacts,\n.local-map {\n\theight: 595px; }\n","@charset \"UTF-8\";\n\n//     _            _           _                           _ _\n//    (_)          | |         | |                         | (_)\n//     _ _ __   ___| |_   _  __| | ___   _ __ ___   ___  __| |_  __ _\n//    | | '_ \\ / __| | | | |/ _` |/ _ \\ | '_ ` _ \\ / _ \\/ _` | |/ _` |\n//    | | | | | (__| | |_| | (_| |  __/ | | | | | |  __/ (_| | | (_| |\n//    |_|_| |_|\\___|_|\\__,_|\\__,_|\\___| |_| |_| |_|\\___|\\__,_|_|\\__,_|\n//\n//      Simple, elegant and maintainable media queries in Sass\n//                        v1.4.9\n//\n//                http://include-media.com\n//\n//         Authors: Eduardo Boucas (@eduardoboucas)\n//                  Hugo Giraudel (@hugogiraudel)\n//\n//      This project is licensed under the terms of the MIT license\n\n\n////\n/// include-media library public configuration\n/// @author Eduardo Boucas\n/// @access public\n////\n\n\n///\n/// Creates a list of global breakpoints\n///\n/// @example scss - Creates a single breakpoint with the label `phone`\n///  $breakpoints: ('phone': 320px);\n///\n$breakpoints: (\n  'phone': 320px,\n  'tablet': 768px,\n  'desktop': 1024px\n) !default;\n\n\n///\n/// Creates a list of static expressions or media types\n///\n/// @example scss - Creates a single media type (screen)\n///  $media-expressions: ('screen': 'screen');\n///\n/// @example scss - Creates a static expression with logical disjunction (OR operator)\n///  $media-expressions: (\n///    'retina2x': '(-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi)'\n///  );\n///\n$media-expressions: (\n  'screen': 'screen',\n  'print': 'print',\n  'handheld': 'handheld',\n  'landscape': '(orientation: landscape)',\n  'portrait': '(orientation: portrait)',\n  'retina2x': '(-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi), (min-resolution: 2dppx)',\n  'retina3x': '(-webkit-min-device-pixel-ratio: 3), (min-resolution: 350dpi), (min-resolution: 3dppx)'\n) !default;\n\n\n///\n/// Defines a number to be added or subtracted from each unit when declaring breakpoints with exclusive intervals\n///\n/// @example scss - Interval for pixels is defined as `1` by default\n///  @include media('>128px') {}\n///\n///  /* Generates: */\n///  @media (min-width: 129px) {}\n///\n/// @example scss - Interval for ems is defined as `0.01` by default\n///  @include media('>20em') {}\n///\n///  /* Generates: */\n///  @media (min-width: 20.01em) {}\n///\n/// @example scss - Interval for rems is defined as `0.1` by default, to be used with `font-size: 62.5%;`\n///  @include media('>2.0rem') {}\n///\n///  /* Generates: */\n///  @media (min-width: 2.1rem) {}\n///\n$unit-intervals: (\n  'px': 1,\n  'em': 0.01,\n  'rem': 0.1,\n  '': 0\n) !default;\n\n///\n/// Defines whether support for media queries is available, useful for creating separate stylesheets\n/// for browsers that don't support media queries.\n///\n/// @example scss - Disables support for media queries\n///  $im-media-support: false;\n///  @include media('>=tablet') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///  /* Generates: */\n///  .foo {\n///    color: tomato;\n///  }\n///\n$im-media-support: true !default;\n\n///\n/// Selects which breakpoint to emulate when support for media queries is disabled. Media queries that start at or\n/// intercept the breakpoint will be displayed, any others will be ignored.\n///\n/// @example scss - This media query will show because it intercepts the static breakpoint\n///  $im-media-support: false;\n///  $im-no-media-breakpoint: 'desktop';\n///  @include media('>=tablet') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///  /* Generates: */\n///  .foo {\n///    color: tomato;\n///  }\n///\n/// @example scss - This media query will NOT show because it does not intercept the desktop breakpoint\n///  $im-media-support: false;\n///  $im-no-media-breakpoint: 'tablet';\n///  @include media('>=desktop') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///  /* No output */\n///\n$im-no-media-breakpoint: 'desktop' !default;\n\n///\n/// Selects which media expressions are allowed in an expression for it to be used when media queries\n/// are not supported.\n///\n/// @example scss - This media query will show because it intercepts the static breakpoint and contains only accepted media expressions\n///  $im-media-support: false;\n///  $im-no-media-breakpoint: 'desktop';\n///  $im-no-media-expressions: ('screen');\n///  @include media('>=tablet', 'screen') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///   /* Generates: */\n///   .foo {\n///     color: tomato;\n///   }\n///\n/// @example scss - This media query will NOT show because it intercepts the static breakpoint but contains a media expression that is not accepted\n///  $im-media-support: false;\n///  $im-no-media-breakpoint: 'desktop';\n///  $im-no-media-expressions: ('screen');\n///  @include media('>=tablet', 'retina2x') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///  /* No output */\n///\n$im-no-media-expressions: ('screen', 'portrait', 'landscape') !default;\n\n////\n/// Cross-engine logging engine\n/// @author Hugo Giraudel\n/// @access private\n////\n\n\n///\n/// Log a message either with `@error` if supported\n/// else with `@warn`, using `feature-exists('at-error')`\n/// to detect support.\n///\n/// @param {String} $message - Message to log\n///\n@function im-log($message) {\n  @if feature-exists('at-error') {\n    @error $message;\n  } @else {\n    @warn $message;\n    $_: noop();\n  }\n\n  @return $message;\n}\n\n\n///\n/// Wrapper mixin for the log function so it can be used with a more friendly\n/// API than `@if im-log('..') {}` or `$_: im-log('..')`. Basically, use the function\n/// within functions because it is not possible to include a mixin in a function\n/// and use the mixin everywhere else because it's much more elegant.\n///\n/// @param {String} $message - Message to log\n///\n@mixin log($message) {\n  @if im-log($message) {}\n}\n\n\n///\n/// Function with no `@return` called next to `@warn` in Sass 3.3\n/// to trigger a compiling error and stop the process.\n///\n@function noop() {}\n\n///\n/// Determines whether a list of conditions is intercepted by the static breakpoint.\n///\n/// @param {Arglist}   $conditions  - Media query conditions\n///\n/// @return {Boolean} - Returns true if the conditions are intercepted by the static breakpoint\n///\n@function im-intercepts-static-breakpoint($conditions...) {\n  $no-media-breakpoint-value: map-get($breakpoints, $im-no-media-breakpoint);\n\n  @if not $no-media-breakpoint-value {\n    @if im-log('`#{$im-no-media-breakpoint}` is not a valid breakpoint.') {}\n  }\n\n  @each $condition in $conditions {\n    @if not map-has-key($media-expressions, $condition) {\n      $operator: get-expression-operator($condition);\n      $prefix: get-expression-prefix($operator);\n      $value: get-expression-value($condition, $operator);\n\n      // scss-lint:disable SpaceAroundOperator\n      @if ($prefix == 'max' and $value <= $no-media-breakpoint-value) or\n          ($prefix == 'min' and $value > $no-media-breakpoint-value) {\n        @return false;\n      }\n    } @else if not index($im-no-media-expressions, $condition) {\n      @return false;\n    }\n  }\n\n  @return true;\n}\n\n////\n/// Parsing engine\n/// @author Hugo Giraudel\n/// @access private\n////\n\n\n///\n/// Get operator of an expression\n///\n/// @param {String} $expression - Expression to extract operator from\n///\n/// @return {String} - Any of `>=`, `>`, `<=`, `<`, `≥`, `≤`\n///\n@function get-expression-operator($expression) {\n  @each $operator in ('>=', '>', '<=', '<', '≥', '≤') {\n    @if str-index($expression, $operator) {\n      @return $operator;\n    }\n  }\n\n  // It is not possible to include a mixin inside a function, so we have to\n  // rely on the `im-log(..)` function rather than the `log(..)` mixin. Because\n  // functions cannot be called anywhere in Sass, we need to hack the call in\n  // a dummy variable, such as `$_`. If anybody ever raise a scoping issue with\n  // Sass 3.3, change this line in `@if im-log(..) {}` instead.\n  $_: im-log('No operator found in `#{$expression}`.');\n}\n\n\n///\n/// Get dimension of an expression, based on a found operator\n///\n/// @param {String} $expression - Expression to extract dimension from\n/// @param {String} $operator - Operator from `$expression`\n///\n/// @return {String} - `width` or `height` (or potentially anything else)\n///\n@function get-expression-dimension($expression, $operator) {\n  $operator-index: str-index($expression, $operator);\n  $parsed-dimension: str-slice($expression, 0, $operator-index - 1);\n  $dimension: 'width';\n\n  @if str-length($parsed-dimension) > 0 {\n    $dimension: $parsed-dimension;\n  }\n\n  @return $dimension;\n}\n\n\n///\n/// Get dimension prefix based on an operator\n///\n/// @param {String} $operator - Operator\n///\n/// @return {String} - `min` or `max`\n///\n@function get-expression-prefix($operator) {\n  @return if(index(('<', '<=', '≤'), $operator), 'max', 'min');\n}\n\n\n///\n/// Get value of an expression, based on a found operator\n///\n/// @param {String} $expression - Expression to extract value from\n/// @param {String} $operator - Operator from `$expression`\n///\n/// @return {Number} - A numeric value\n///\n@function get-expression-value($expression, $operator) {\n  $operator-index: str-index($expression, $operator);\n  $value: str-slice($expression, $operator-index + str-length($operator));\n\n  @if map-has-key($breakpoints, $value) {\n    $value: map-get($breakpoints, $value);\n  } @else {\n    $value: to-number($value);\n  }\n\n  $interval: map-get($unit-intervals, unit($value));\n\n  @if not $interval {\n    // It is not possible to include a mixin inside a function, so we have to\n    // rely on the `im-log(..)` function rather than the `log(..)` mixin. Because\n    // functions cannot be called anywhere in Sass, we need to hack the call in\n    // a dummy variable, such as `$_`. If anybody ever raise a scoping issue with\n    // Sass 3.3, change this line in `@if im-log(..) {}` instead.\n    $_: im-log('Unknown unit `#{unit($value)}`.');\n  }\n\n  @if $operator == '>' {\n    $value: $value + $interval;\n  } @else if $operator == '<' {\n    $value: $value - $interval;\n  }\n\n  @return $value;\n}\n\n\n///\n/// Parse an expression to return a valid media-query expression\n///\n/// @param {String} $expression - Expression to parse\n///\n/// @return {String} - Valid media query\n///\n@function parse-expression($expression) {\n  // If it is part of $media-expressions, it has no operator\n  // then there is no need to go any further, just return the value\n  @if map-has-key($media-expressions, $expression) {\n    @return map-get($media-expressions, $expression);\n  }\n\n  $operator: get-expression-operator($expression);\n  $dimension: get-expression-dimension($expression, $operator);\n  $prefix: get-expression-prefix($operator);\n  $value: get-expression-value($expression, $operator);\n\n  @return '(#{$prefix}-#{$dimension}: #{$value})';\n}\n\n///\n/// Slice `$list` between `$start` and `$end` indexes\n///\n/// @access private\n///\n/// @param {List} $list - List to slice\n/// @param {Number} $start [1] - Start index\n/// @param {Number} $end [length($list)] - End index\n///\n/// @return {List} Sliced list\n///\n@function slice($list, $start: 1, $end: length($list)) {\n  @if length($list) < 1 or $start > $end {\n    @return ();\n  }\n\n  $result: ();\n\n  @for $i from $start through $end {\n    $result: append($result, nth($list, $i));\n  }\n\n  @return $result;\n}\n\n////\n/// String to number converter\n/// @author Hugo Giraudel\n/// @access private\n////\n\n\n///\n/// Casts a string into a number\n///\n/// @param {String | Number} $value - Value to be parsed\n///\n/// @return {Number}\n///\n@function to-number($value) {\n  @if type-of($value) == 'number' {\n    @return $value;\n  } @else if type-of($value) != 'string' {\n    $_: im-log('Value for `to-number` should be a number or a string.');\n  }\n\n  $first-character: str-slice($value, 1, 1);\n  $result: 0;\n  $digits: 0;\n  $minus: ($first-character == '-');\n  $numbers: ('0': 0, '1': 1, '2': 2, '3': 3, '4': 4, '5': 5, '6': 6, '7': 7, '8': 8, '9': 9);\n\n  // Remove +/- sign if present at first character\n  @if ($first-character == '+' or $first-character == '-') {\n    $value: str-slice($value, 2);\n  }\n\n  @for $i from 1 through str-length($value) {\n    $character: str-slice($value, $i, $i);\n\n    @if not (index(map-keys($numbers), $character) or $character == '.') {\n      @return to-length(if($minus, -$result, $result), str-slice($value, $i))\n    }\n\n    @if $character == '.' {\n      $digits: 1;\n    } @else if $digits == 0 {\n      $result: $result * 10 + map-get($numbers, $character);\n    } @else {\n      $digits: $digits * 10;\n      $result: $result + map-get($numbers, $character) / $digits;\n    }\n  }\n\n  @return if($minus, -$result, $result);\n}\n\n\n///\n/// Add `$unit` to `$value`\n///\n/// @param {Number} $value - Value to add unit to\n/// @param {String} $unit - String representation of the unit\n///\n/// @return {Number} - `$value` expressed in `$unit`\n///\n@function to-length($value, $unit) {\n  $units: ('px': 1px, 'cm': 1cm, 'mm': 1mm, '%': 1%, 'ch': 1ch, 'pc': 1pc, 'in': 1in, 'em': 1em, 'rem': 1rem, 'pt': 1pt, 'ex': 1ex, 'vw': 1vw, 'vh': 1vh, 'vmin': 1vmin, 'vmax': 1vmax);\n\n  @if not index(map-keys($units), $unit) {\n    $_: im-log('Invalid unit `#{$unit}`.');\n  }\n\n  @return $value * map-get($units, $unit);\n}\n\n///\n/// This mixin aims at redefining the configuration just for the scope of\n/// the call. It is helpful when having a component needing an extended\n/// configuration such as custom breakpoints (referred to as tweakpoints)\n/// for instance.\n///\n/// @author Hugo Giraudel\n///\n/// @param {Map} $tweakpoints [()] - Map of tweakpoints to be merged with `$breakpoints`\n/// @param {Map} $tweak-media-expressions [()] - Map of tweaked media expressions to be merged with `$media-expression`\n///\n/// @example scss - Extend the global breakpoints with a tweakpoint\n///  @include media-context(('custom': 678px)) {\n///    .foo {\n///      @include media('>phone', '<=custom') {\n///       // ...\n///      }\n///    }\n///  }\n///\n/// @example scss - Extend the global media expressions with a custom one\n///  @include media-context($tweak-media-expressions: ('all': 'all')) {\n///    .foo {\n///      @include media('all', '>phone') {\n///       // ...\n///      }\n///    }\n///  }\n///\n/// @example scss - Extend both configuration maps\n///  @include media-context(('custom': 678px), ('all': 'all')) {\n///    .foo {\n///      @include media('all', '>phone', '<=custom') {\n///       // ...\n///      }\n///    }\n///  }\n///\n@mixin media-context($tweakpoints: (), $tweak-media-expressions: ()) {\n  // Save global configuration\n  $global-breakpoints: $breakpoints;\n  $global-media-expressions: $media-expressions;\n\n  // Update global configuration\n  $breakpoints: map-merge($breakpoints, $tweakpoints) !global;\n  $media-expressions: map-merge($media-expressions, $tweak-media-expressions) !global;\n\n  @content;\n\n  // Restore global configuration\n  $breakpoints: $global-breakpoints !global;\n  $media-expressions: $global-media-expressions !global;\n}\n\n////\n/// include-media public exposed API\n/// @author Eduardo Boucas\n/// @access public\n////\n\n\n///\n/// Generates a media query based on a list of conditions\n///\n/// @param {Arglist}   $conditions  - Media query conditions\n///\n/// @example scss - With a single set breakpoint\n///  @include media('>phone') { }\n///\n/// @example scss - With two set breakpoints\n///  @include media('>phone', '<=tablet') { }\n///\n/// @example scss - With custom values\n///  @include media('>=358px', '<850px') { }\n///\n/// @example scss - With set breakpoints with custom values\n///  @include media('>desktop', '<=1350px') { }\n///\n/// @example scss - With a static expression\n///  @include media('retina2x') { }\n///\n/// @example scss - Mixing everything\n///  @include media('>=350px', '<tablet', 'retina3x') { }\n///\n@mixin media($conditions...) {\n  // scss-lint:disable SpaceAroundOperator\n  @if ($im-media-support and length($conditions) == 0) or\n      (not $im-media-support and im-intercepts-static-breakpoint($conditions...)) {\n    @content;\n  } @else if ($im-media-support and length($conditions) > 0) {\n    @media #{unquote(parse-expression(nth($conditions, 1)))} {\n      // Recursive call\n      @include media(slice($conditions, 2)...) {\n        @content;\n      }\n    }\n  }\n}\n","@import \"functions\";\n@import \"placeholders\";\n\n// medium query\n$breakpoints: ('desk-qhd': 2560px, 'desk-hd': 1920px, 'desk-lg': 1600px, 'desk-ml': 1440px, 'desk-md': 1366px, 'desk-sm': 1200px, 'tab-lg': 980px, 'tab-sm': 768px, 'mob-lg': 640px, 'mob-md': 480px, 'mob-sm': 320px);\n\n$spec-text-color: #000;\n$spec-bg-color: #fff;\n\n$spec-text-color--scheme-white: #fff;\n$spec-bg-color--scheme-white: #000;\n\n//$spec-text-color--scheme-blue: #002d56\n$spec-text-color--scheme-blue: #004c92;\n//$spec-text-color--scheme-blue: #2771ff\n//$spec-text-color--scheme-blue: #ff74a3\n$spec-bg-color--scheme-blue: #c8e5ff;\n\n$font-size: 18px;\n//$line-height: 32px;\n$line-height: 1.78;\n$font-size--sm: 14px;\n$font-size--lg: 30px;\n\n//$font-size$small: 16px;\n$font-size--small: 0.89em;\n//$line-height$small: 28px;\n$line-height--small: 1.75;\n\n$title-font-size: 30px;\n//$title-font-size: 1.67em\n//$title-line-height: 36px\n$title-line-height: 1.6;\n\n//$sub-title-font-size: 24px;\n$sub-title-font-size: 1.44em; // 26px\n//$sub-title-line-height: 30px;\n$sub-title-line-height: 1.55;\n\n//$item-font-size: 24px;\n$item-font-size: 1.22em; // 22px\n//$item-line-height: 30px;\n$item-line-height: 1.55;\n\n$letter-spacing: normal;\n$letter-spacing--medium: 0.2em;\n$letter-spacing--large: 0.5em;\n\n//$bottom-space-section: 30px;\n$bottom-space-section: 2.5em;\n$bottom-space: 0.8em;\n$bottom-space-item: 2em;\n",".spec-panel {\n\tdisplay: none;\n\tposition: fixed;\n\tleft: 0;\n\ttop: 0;\n\theight: 100%;\n\twidth: 70px;\n\tz-index: 999;\n\tfont-size: 16px;\n\tline-height: 1;\n\toverflow: hidden;\n\tbox-shadow: 0 0 0 1px currentColor;\n\tbackground-color: inherit;\n\twill-change: transform;\n\t-webkit-transform: translate(0, 0);\n\t-ms-transform: translate(0, 0);\n\ttransform: translate(0, 0);\n\t-webkit-transition: transform 0.3s linear;\n\ttransition: transform 0.3s linear;\n}\n\n@media (max-width: 479px) {\n\t.spec-panel {\n\t\theight: 70px;\n\t\twidth: 100%;\n\t\tborder-width: 0 0 2px 0;\n\t\tbox-shadow: 0 0 0 2px currentColor, 0 4px 4px rgba(0, 0, 0, 0.3);\n\t}\n\t.schemecolor-white .spec-panel {\n\t\tbox-shadow: 0 0 0 2px currentColor, 0 4px 4px rgba(255, 255, 255, 0.3);\n\t}\n\t.schemecolor-blue .spec-panel {\n\t\tbox-shadow: 0 0 0 2px currentColor, 0 4px 4px rgba(0, 76, 146, 0.3);\n\t}\n}\n\n.vspec .spec-panel {\n\tdisplay: block;\n}\n\n.spec-panel:hover,\n.mobile-device .spec-panel {\n\toverflow-y: auto;\n}\n\n@media (max-width: 479px) {\n\t.spec-panel:hover,\n\t.mobile-device .spec-panel {\n\t\toverflow-y: hidden;\n\t\toverflow-x: auto;\n\t}\n}\n\n@media (max-width: 979px) {\n\t.nav-opened .inner-page .spec-panel {\n\t\ttransform: translate(-100%, 0);\n\t}\n}\n\n@media (max-width: 479px) {\n\t.nav-opened .inner-page .spec-panel {\n\t\ttransform: translate(0, calc(-100% - 2px));\n\t\tbox-shadow: none;\n\t}\n}\n\n@media (max-width: 767px) {\n\t.nav-opened .main-page .spec-panel {\n\t\ttransform: translate(-100%, 0);\n\t}\n}\n\n@media (max-width: 479px) {\n\t.spec-panel .sv-btn-group {\n\t\tdisplay: inline-block;\n\t\tvertical-align: top;\n\t}\n}\n\n.spec-panel hr {\n\tborder-color: currentColor;\n\tborder-bottom-width: 1px;\n\tmargin: 20px 0;\n}\n\n@media (max-width: 479px) {\n\t.spec-panel hr {\n\t\tdisplay: inline-block;\n\t\tvertical-align: top;\n\t\tborder-left: 1px solid currentColor;\n\t\tborder: none;\n\t\twidth: 0;\n\t\theight: 36px;\n\t\tmargin: 0 10px 0 0;\n\t}\n}\n\n.spec-panel a {\n\tdisplay: block;\n\tmargin-bottom: 18px;\n\tmargin-left: auto;\n\tmargin-right: auto;\n}\n\n@media (max-width: 479px) {\n\t.spec-panel a {\n\t\tdisplay: inline-block;\n\t\tvertical-align: top;\n\t\tmargin-bottom: 0;\n\t\tmargin-right: 10px;\n\t}\n}\n\n.spec-panel_h {\n\tpadding: 20px 0;\n\ttext-align: center;\n\tletter-spacing: -4px;\n\tfont-size: 0;\n\tline-height: 1;\n}\n\n@media (max-width: 479px) {\n\t.spec-panel_h {\n\t\twhite-space: nowrap;\n\t\tpadding: 10px;\n\t}\n}\n\n.spec-panel,\n.spec-panel_h {\n\twidth: 70px;\n\tbox-sizing: border-box;\n}\n\n@media (max-width: 479px) {\n\t.spec-panel,\n\t.spec-panel_h {\n\t\theight: 56px;\n\t\twidth: 100%;\n\t}\n}\n\n.vspec-btn,\n.spec-panel .sv-btn,\n.spec-panel .vnorm-btn {\n\twidth: 42px;\n\theight: 42px;\n\tposition: relative;\n\toverflow: hidden;\n\tfont-size: 16px;\n\tline-height: 1;\n\tletter-spacing: normal;\n\ttext-decoration: none;\n\tborder-radius: 2px;\n\tborder: 1px solid #000;\n\tbox-sizing: border-box;\n}\n\n@media (max-width: 479px) {\n\t.vspec-btn,\n\t.spec-panel .sv-btn,\n\t.spec-panel .vnorm-btn {\n\t\twidth: 36px;\n\t\theight: 36px;\n\t}\n}\n\n.schemecolor-white .vspec-btn, .schemecolor-white\n.spec-panel .sv-btn, .schemecolor-white\n.spec-panel .vnorm-btn {\n\tborder-color: #fff;\n}\n\n.schemecolor-blue .vspec-btn, .schemecolor-blue\n.spec-panel .sv-btn, .schemecolor-blue\n.spec-panel .vnorm-btn {\n\tborder-color: #004c92;\n}\n\n.vspec-btn:hover,\n.spec-panel .sv-btn:not(.active):hover,\n.spec-panel .vnorm-btn:hover {\n\t-webkit-transform: translate(-1px, -1px);\n\t-ms-transform: translate(-1px, -1px);\n\ttransform: translate(-1px, -1px);\n}\n\n.vspec-btn:focus,\n.spec-panel .sv-btn:not(.active):focus,\n.spec-panel .vnorm-btn:focus {\n\t-webkit-transform: translate(-1px, -1px);\n\t-ms-transform: translate(-1px, -1px);\n\ttransform: translate(-1px, -1px);\n}\n\n.vspec-btn:active,\n.spec-panel .vnorm-btn:active,\n.spec-panel .sv-btn:active,\n.spec-panel .vspec .vnorm-btn:active {\n\t-webkit-transform: translate(0, 0);\n\t-ms-transform: translate(0, 0);\n\ttransform: translate(0, 0);\n}\n\n.vspec-btn.active,\n.spec-panel .vnorm-btn.active,\n.spec-panel .sv-btn.active,\n.spec-panel .vspec .vnorm-btn.active {\n\tbox-shadow: 0 0 0 2px #fff, 0 0 0 6px #000;\n}\n\n@media (max-width: 479px) {\n\t.vspec-btn.active,\n\t.spec-panel .vnorm-btn.active,\n\t.spec-panel .sv-btn.active,\n\t.spec-panel .vspec .vnorm-btn.active {\n\t\tbox-shadow: 0 0 0 2px #fff, 0 0 0 4px #000;\n\t}\n}\n\n.schemecolor-white .vspec-btn.active, .schemecolor-white\n.spec-panel .vnorm-btn.active, .schemecolor-white\n.spec-panel .sv-btn.active, .schemecolor-white\n.spec-panel .vspec .vnorm-btn.active {\n\tbox-shadow: 0 0 0 2px #000, 0 0 0 6px #fff;\n}\n\n@media (max-width: 479px) {\n\t.schemecolor-white .vspec-btn.active, .schemecolor-white\n\t.spec-panel .vnorm-btn.active, .schemecolor-white\n\t.spec-panel .sv-btn.active, .schemecolor-white\n\t.spec-panel .vspec .vnorm-btn.active {\n\t\tbox-shadow: 0 0 0 2px #000, 0 0 0 4px #fff;\n\t}\n}\n\n.schemecolor-blue .vspec-btn.active, .schemecolor-blue\n.spec-panel .vnorm-btn.active, .schemecolor-blue\n.spec-panel .sv-btn.active, .schemecolor-blue\n.spec-panel .vspec .vnorm-btn.active {\n\tbox-shadow: 0 0 0 2px #c8e5ff, 0 0 0 6px #004c92;\n}\n\n@media (max-width: 479px) {\n\t.schemecolor-blue .vspec-btn.active, .schemecolor-blue\n\t.spec-panel .vnorm-btn.active, .schemecolor-blue\n\t.spec-panel .sv-btn.active, .schemecolor-blue\n\t.spec-panel .vspec .vnorm-btn.active {\n\t\tbox-shadow: 0 0 0 2px #c8e5ff, 0 0 0 4px #004c92;\n\t}\n}\n\n.vspec-btn span,\n.spec-panel .sv-btn span,\n.spec-panel .vnorm-btn span {\n\tfont-size: 0;\n\tline-height: 0;\n}\n\n.vspec-btn svg,\n.spec-panel .sv-btn svg,\n.spec-panel .vnorm-btn svg {\n\tdisplay: block;\n\tposition: absolute;\n\tleft: 50%;\n\ttop: 50%;\n\ttransform: translate(-50%, -50%);\n\tbox-sizing: border-box;\n}\n\n.vspec-btn path,\n.spec-panel .sv-btn path,\n.spec-panel .vnorm-btn path {\n\tfill: currentColor;\n}\n\n.spec-panel .vnorm-btn {\n\tdisplay: none;\n}\n\n.vspec .spec-panel .vnorm-btn {\n\tdisplay: block;\n}\n\n@media (max-width: 479px) {\n\t.vspec .spec-panel .vnorm-btn {\n\t\tdisplay: inline-block;\n\t}\n}\n\n.vspec-btn {\n\tposition: fixed;\n\tleft: 10px;\n\ttop: 10px;\n\tz-index: 9998;\n\tbackground-color: wheat;\n\tborder: none;\n\tbox-shadow: 2px 2px 2px rgba(0, 0, 0, 0.2);\n}\n\n.vspec .vspec-btn {\n\tdisplay: none;\n}\n\n/* vsize-btn */\n.spec-panel .vsize.active {\n\tcursor: default;\n}\n\n/* special version color */\n.spec-panel .vcolor-btn-black {\n\tcolor: #000;\n\tbackground-color: #fff;\n}\n\n.spec-panel .vcolor-btn-white {\n\tcolor: #fff;\n\tbackground-color: #000;\n}\n\n.spec-panel .vcolor-btn-blue {\n\tcolor: #004c92;\n\tbackground-color: #c8e5ff;\n}\n\n.spec-panel .sv-spacing-btn--small .icon, .spec-panel .sv-spacing-btn--small .icon::before, .spec-panel .sv-spacing-btn--small .icon::after, .spec-panel .sv-spacing-btn--medium .icon, .spec-panel .sv-spacing-btn--medium .icon::before, .spec-panel .sv-spacing-btn--medium .icon::after, .spec-panel .sv-spacing-btn--large .icon, .spec-panel .sv-spacing-btn--large .icon::before, .spec-panel .sv-spacing-btn--large .icon::after {\n\tdisplay: block;\n\tposition: absolute;\n\tleft: 50%;\n\ttop: 50%;\n\theight: 16px;\n\twidth: 2px;\n\tbackground-color: currentColor;\n}\n\n.spec-panel .sv-spacing-btn--small .icon, .spec-panel .sv-spacing-btn--medium .icon, .spec-panel .sv-spacing-btn--large .icon {\n\tmargin: -8px 0 0 -1px;\n}\n\n.spec-panel .sv-spacing-btn--small .icon::before, .spec-panel .sv-spacing-btn--small .icon::after, .spec-panel .sv-spacing-btn--medium .icon::before, .spec-panel .sv-spacing-btn--medium .icon::after, .spec-panel .sv-spacing-btn--large .icon::before, .spec-panel .sv-spacing-btn--large .icon::after {\n\tcontent: \"\";\n\tmargin-top: -8px;\n}\n\n.spec-panel .sv-spacing-btn--small .icon::before, .spec-panel .sv-spacing-btn--medium .icon::before, .spec-panel .sv-spacing-btn--large .icon::before {\n\tmargin-left: -6px;\n}\n\n.spec-panel .sv-spacing-btn--small .icon::after, .spec-panel .sv-spacing-btn--medium .icon::after, .spec-panel .sv-spacing-btn--large .icon::after {\n\tmargin-left: 4px;\n}\n\n.spec-panel .sv-spacing-btn--medium .icon::before {\n\tmargin-left: -9px;\n}\n\n.spec-panel .sv-spacing-btn--medium .icon::after {\n\tmargin-left: 7px;\n}\n\n.spec-panel .sv-spacing-btn--large .icon::before {\n\tmargin-left: -12px;\n}\n\n.spec-panel .sv-spacing-btn--large .icon::after {\n\tmargin-left: 10px;\n}\n\n.main-contacts,\n.local-map {\n\theight: 595px;\n}\n"]}